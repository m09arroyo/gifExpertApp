{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","setTimeout","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aCJlBG,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IACzB,OACI,sBAAKC,UAAU,8BAAf,UACI,qBAAMC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC7B,4BAAIL,EAAIK,Y,uBCNPC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbL,EADa,iDACmCM,UAAUF,GAD7C,+DAEIG,MAAMP,GAFV,cAEbQ,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAf,GAAM,IAAD,EACvB,MAAO,CACHgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBf,QARvB,kBAYZW,GAZY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B+B,OAAQ,GACRG,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAVAC,qBAAU,WACNC,YAAW,WACPlB,EAAQC,GAAUkB,MAAK,SAAAC,GAAI,OAAIJ,EAAS,CACpCL,OAAQS,EACRN,SAAS,SAEd,OACJ,CAACb,IAGGc,EDhBmBM,CAAapB,GAAhCU,EAD4B,EAC5BA,OAAQG,EADoB,EACpBA,QAEf,OACI,qCACI,6BAAKb,IACJa,GAAW,2CAEZ,qBAAKnB,UAAU,YAAf,SAEQgB,EAAOF,KAAI,SAAAf,GACP,OAAO,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIgB,aEZxCY,EAAgB,WAAO,IAAD,EAEK1C,mBAAS,CAAC,YAFf,mBAExB2C,EAFwB,KAEZ5C,EAFY,KAI/B,OACI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEI4C,EAAWd,KAAI,SAAAR,GACX,OAAO,cAAC,EAAD,CAAwBA,SAAYA,GAAtBA,UCTrCuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c38d3b28.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n    return (\r\n        <div className=\"card animate__fadeInTopLeft\">\r\n            <img  src={img.url} alt={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=HCT7U6stwguM4pjv16AWHxK7S9cKrx5M`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport {GifGridItem} from '../components/GifGridItem'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img=>{\r\n                        return <GifGridItem key={img.id} img={img}/>\r\n                        // return <GifGridItem  key={img.id} img={img}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        images: [],\r\n        loading: true\r\n    });\r\n    \r\n    // Solo se ejecuta cuando la categorÃ­a cambia\r\n    useEffect(()=>{\r\n        setTimeout(() => {\r\n            getGifs(category).then(imgs => setstate({\r\n                images: imgs,\r\n                loading: false\r\n            }));\r\n        }, 1000);\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Digimon']);\r\n\r\n    return (\r\n        <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories = {setCategories}/>\r\n        <hr/>\r\n        {\r\n            categories.map(category=> {\r\n                return <GifGrid key={category} category = {category}/>\r\n            })\r\n        }\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GiftExpertApp } from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}